@model  List<Ncepu.GraduationProject.Sis.Web.Models.General.Index.QueryModel>
@using Ncepu.GraduationProject.Sis.Web.Models.General.Index;
@{
    ViewBag.Title = "指标查询";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    .rheader
    {
        font-weight: bold;
        width: 40%;
    }
</style>
<div>
    <ul class="breadcrumb">
        <li>
            <a href="@Url.Action("Index", "Home")">首页</a> <span class="divider">/</span>
        </li>
        <li>
            <a href="#">综合运行状况</a>
        </li>
        <li style="padding-left: 70%">
            <button class="btn btn-small btn-primary" onclick="$('#genModal').modal('show');">
                <i class=" icon-search"></i>&nbsp;&nbsp;指标查询/对比</button></li>
    </ul>
</div>
<!--row-->
<h2>@Model[0].Date_01.ToString("yyyy-MM-dd")</h2>
<div class="row-fluid sortable">
    <div class="box span12">
        <div class="box-header well" data-original-title>
            <h2>总体概况</h2>
        </div>
        <div class="box-content">
            <table id="general-info" class="table table-striped table-bordered ">
                <tbody>
                    <tr>
                    @if(Model[0].GeneralInfo.IsTotalInstalledCapacityChecked)
                    {
                        <th class="rheader">总装机容量(MW)</th>
                    }
                 
                    
                    @if(Model[0].GeneralInfo.IsDailyGenerateChecked)
                    {
                        <th class="rheader">今日发电量(kW·h)</th>
                    }
                    @if(Model[0].GeneralInfo.IsMonthlyGenerateChecked)
                    {
                        <th class="rheader">月累计发电量(kW·h)</th>
                    }
                    @if(Model[0].GeneralInfo.IsYearlyGenerateChecked)
                    {
                        <th class="rheader">年累计发电量(kW·h)</th>
                    }
                    </tr>
                    <tr>
                    @if(Model[0].GeneralInfo.IsTotalInstalledCapacityChecked)
                    {
                        <td class="center">@Model[0].GeneralInfo.TotalInstalledCapacity</td>
                    }
                 
                    
                    @if(Model[0].GeneralInfo.IsDailyGenerateChecked)
                    {
                        <td class="center">@Model[0].GeneralInfo.DailyGenerate</td>
                    }
                    @if(Model[0].GeneralInfo.IsMonthlyGenerateChecked)
                    {
                        <td class="center">@Model[0].GeneralInfo.MonthlyGenerate</td>
                    }
                    @if(Model[0].GeneralInfo.IsYearlyGenerateChecked)
                    {
                        <td class="center">@Model[0].GeneralInfo.YearlyGenerate</td>
                    }
                    </tr>
                </tbody>
            </table>
        </div>
    </div>
    <!--/span-->
</div>
<!--/row-->
@if(Model[0].Unit[0].IsHourlyAvgLoadChecked || Model[0].GeneralInfo.IsHourlyTotalAvgLoadChecked)
{
<div class="row-fluid sortable">
    <div class="box span12">
        <div class="box-header well" data-original-title>
            <h2>机组负荷</h2>
        </div>
        <div class="box-content" style="overflow-x:scroll">
            <table id="unit-info" class="table table-striped table-bordered " >
                <thead>
                    <tr>
                        <th></th>
                        <th>00:00</th>
                        <th>01:00</th>
                        <th>02:00</th>
                        <th>03:00</th>
                        <th>04:00</th>
                        <th>05:00</th>
                        <th>06:00</th>
                        <th>07:00</th>
                        <th>08:00</th>
                        <th>09:00</th>
                        <th>10:00</th>
                        <th>11:00</th>
                        <th>12:00</th>
                        <th>13:00</th>
                        <th>14:00</th>
                        <th>15:00</th>
                        <th>16:00</th>
                        <th>17:00</th>
                        <th>18:00</th>
                        <th>19:00</th>
                        <th>20:00</th>
                        <th>21:00</th>
                        <th>22:00</th>
                        <th>23:00</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var unit in Model[0].Unit)
                    {
                        if(unit.IsIdChecked && unit.HourlyAvgLoadList!=null)
                        {
                        <tr>
                            <td>@unit.Id #机组负荷(MW)</td>
                            @foreach (var load in unit.HourlyAvgLoadList)
                            {
                                <td>@load</td>
                            }
                         @for(int i=0;i<24-unit.HourlyAvgLoadList.Count();i++)
                         {
                             <td></td>
                         }
                        </tr>
                        }
                    }
                    @if (Model[0].GeneralInfo.IsHourlyTotalAvgLoadChecked)
                    {
                        <tr>
                            <td>总负荷(MW)</td>
                            @foreach (var load in Model[0].GeneralInfo.HourlyAvgTotalLoadList)
                            {
                            <td>@load</td>
                            }
                         @for (int i = 0; i < 24 - Model[0].GeneralInfo.HourlyAvgTotalLoadList.Count(); i++)
                         {
                             <td></td>
                         }
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>

</div>
}
<!--row-->
<div class="row-fluid sortable">

    <div class="box span12">
        <div class="box-header well" data-original-title>
            <h2>负荷曲线</h2>
        </div>
        <div class="box-content">
            <div id="chart-label" style="float: right"></div>
            <div id="load-chart" style="height: 250px; clear: both"></div>
        </div>
    </div>
</div>
<!--/row-->

@{Html.RenderAction("Modal");}

<script>

    var options = {
        series: {
            lines: { show: true, lineWidth: 2 },
            points: { show: true }
        },
        xaxis: {
            mode: "time",
            tickSize: [1, "hour"],
            tickFormatter: function (v, axis) {
                var date = new Date(v);

                if (date.getHours() % 4 == 0) {
                    var hours = date.getHours() < 10 ? "0" + date.getHours() : date.getHours();
                    var minutes = date.getMinutes() < 10 ? "0" + date.getMinutes() : date.getMinutes();

                    return hours + ":" + minutes;
                } else {
                    return "";
                }
            }
        },
        yaxis:
            {
                position: "left",
            },
        legend: {
            noColumns: 0,
            container: "#chart-label"
        },
        grid: { hoverable: true, backgroundColor: { colors: ["#fff", "#eee"] } }
    };

    $(document).ready(function(){
        var trs = $("#unit-info>tbody tr");
        var tr=trs.first();
        var loads = [];
        var dataset=[];
        var colors = ["#edc240", "#3f96cb", "#cb4b4a", "#eda74d", "#9440ed"];
        for (var i =0; i < trs.length; i++) {
            loads.push(getLoad(tr));
            tr = tr.next();
            var tmp={label:loads[i].id,data:loads[i].load,lines:{lineWidth:2},color:colors[i],yaxis:1};
            dataset.push(tmp);
        }

        console.log(loads);
        $.plot($("#load-chart"), dataset, options);


        $("#load-chart").bind("plothover", function (event, pos, item) {
            if (item) {
                if (previousPoint != item.dataIndex) {
                    previousPoint = item.dataIndex;

                    $("#tooltip").remove();
                    var x = item.datapoint[0].toFixed(2), y = item.datapoint[1].toFixed(2);
                    var d = new Date()
                    d.setTime(x);
                    var hours = d.getHours() < 10 ? "0" + d.getHours() : d.getHours();
                    var minutes = d.getMinutes() < 10 ? "0" + d.getMinutes() : d.getMinutes();
                    var seconds = d.getSeconds() < 10 ? "0" + d.getSeconds() : d.getSeconds();
                    var time = "[" + hours + ":" + minutes + ":" + seconds + "]";
                    showTooltip(item.pageX, item.pageY, time + ":" + y + "MW");
                }
            }
            else {
                $("#tooltip").remove();
                previousPoint = null;
            }
        });


    });




    function getLoad(tr) {
        var result = new Object();
        var td = tr.find("td").first();
        result.id = td.html();
        result.load = [];
        for (var i = 0; i < 24; i++) {
            var date = new Date();
            date.setHours(i, 0, 0);
            result.load.push( [date, td.next().html()]);
            td = td.next();
        }
        return result;

    }

    function showTooltip(x, y, contents) {
        $('<div id="tooltip">' + contents + '</div>').css({
            position: 'absolute',
            display: 'none',
            top: y + 5,
            left: x + 5,
            border: '1px solid #fdd',
            padding: '2px',
            'background-color': '#dfeffc',
            opacity: 0.80
        }).appendTo("body").fadeIn(200);
    }
</script>