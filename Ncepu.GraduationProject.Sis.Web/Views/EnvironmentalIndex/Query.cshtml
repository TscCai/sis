@model Ncepu.GraduationProject.Sis.Web.Models.EnvironmentalIndex.QueryModel
@using Ncepu.GraduationProject.Sis.Web.Models.EnvironmentalIndex;
@{
    ViewBag.Title = "指标查询";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div>
    <ul class="breadcrumb">
        <li>
            <a href="@Url.Action("Index", "Home")">首页</a> <span class="divider">/</span>
        </li>
        <li>
            <a href="#">环保指标</a>
        </li>
          <li style="padding-left: 70%">
            <button class="btn btn-small btn-primary" onclick="$('#envModal').modal('show');">
                <i class=" icon-search"></i>&nbsp;&nbsp;指标查询/对比</button>
          </li>
    </ul>
</div>
<h2>@Model.Date_01.ToString("yyyy-MM-dd")</h2>
<!--row-->
<div class="row-fluid sortable">
    <div class="box span12">
        <div class="box-header well" data-original-title="">
            <h2>环保指标</h2>
            <div class="box-icon">
				<a href="#" class="btn btn-minimize btn-round"><i class="icon-chevron-down"></i></a>
			</div>
        </div>
        <div class="box-content" style="display:none">
            <table id="environmental-info" class="table table-striped table-bordered ">
                <thead>
                    <tr>
                        <th>时刻</th>
                        @if(Model.IsSO2Checked)
                        {
                        <th id="h_so2">SO2排放量(mg/m<sup>3</sup>)</th>
                        }
                        @if(Model.IsNOxChecked)
                        {
                        <th id="h_nox">NOx(mg/m<sup>3</sup>)</th>
                        }
                        @if(Model.IsDSPCChecked)
                        {
                        <th id="h_dspc">脱硫耗电量(MW·h)</th>
                        }
                        @if(Model.IsDNPCChecked)
                        {
                        <th id="h_dnpc">脱硝耗电量(MW·h)</th>
                        }
                    </tr>
                </thead>
                <tbody>
                @foreach (var item in Model.Data[0])
                {
                    <tr>
                        <td>@item.Timestamp.ToString("HH:mm:ss")</td>
                         @if (Model.IsSO2Checked)
                         {
                        <td class="d_so2">@item.SO2</td>
                         }
                        @if (Model.IsNOxChecked)
                        {
                        <td class="d_nox">@item.NOX</td>
                        }
                        @if (Model.IsDSPCChecked)
                        {
                        <td class="d_dspc">@item.DSPC</td>
                        }
                        @if (Model.IsDNPCChecked)
                        {
                        <td class="d_dnpc">@item.DNPC</td>
                        }
                    </tr>
                }
                </tbody>
            </table>
        </div>
    </div>
</div>
<!--/row-->

<!-- row -->
<div class="row-fluid sortable">
    <div class="box span12">
        <div class="box-header well" data-original-title="">
            <h2>每小时曲线</h2>
        </div>
        <div class="box-content">
             <div id="chart-label" style="float:right"></div>
            <div id="env-chart" style="height:250px;clear:both"></div>
        </div>
    </div>
</div>

<!--/row-->
@{Html.RenderAction("Modal");}


<script>

    var options = {
        series: {
            lines: { show: true, lineWidth: 2 },
            points: { show: true }
        },
        xaxis: {
            mode: "time",
            tickSize: [1, "hour"],
            tickFormatter: function (v, axis) {
                var date = new Date(v);

                if (date.getHours() % 4 == 0) {
                    var hours = date.getHours() < 10 ? "0" + date.getHours() : date.getHours();
                    var minutes = date.getMinutes() < 10 ? "0" + date.getMinutes() : date.getMinutes();

                    return hours + ":" + minutes;
                } else {
                    return "";
                }
            }
        },
        yaxes: [
               {
                   position:"left",
                   axisLabel: "排放量"
               },{
               position: "right",
               axisLabel: "耗电量"
           }
        ],
        legend: {
            noColumns: 0,
            container: "#chart-label"
        },
        grid: { hoverable: true, backgroundColor: { colors: ["#fff", "#eee"] } }
    };

    $(document).ready(function(){
        var tb = $("#environmental-info>tbody");
        var data=[];
        var dataset=[];
        var colors = ["#edc240", "#3f96cb", "#cb4b4a", "#eda74d", "#9440ed"];

        data.push(getData("so2",tb,1));
        data.push(getData("nox",tb,1));
        data.push(getData("dspc",tb,2));
        data.push(getData("dnpc",tb,2));

        for (var i = 0; i < data.length; i++) {
             var tmp={label:data[i].id,data:data[i].data,lines:{lineWidth:2},color:colors[i],yaxis:data[i].axis};
            dataset.push(tmp);
        }
        console.log(dataset);
    
        $.plot($("#env-chart"), dataset, options);

        var previousPoint = null;

        $("#env-chart").bind("plothover", function (event, pos, item) {
            if (item) {
                if (previousPoint != item.dataIndex) {
                    previousPoint = item.dataIndex;

                    $("#tooltip").remove();
                    var x = item.datapoint[0].toFixed(2), y = item.datapoint[1].toFixed(2);
                    var d = new Date()
                    d.setTime(x);
                    var hours = d.getHours() < 10 ? "0" + d.getHours() : d.getHours();
                    var minutes = d.getMinutes() < 10 ? "0" + d.getMinutes() : d.getMinutes();
                    var seconds = d.getSeconds() < 10 ? "0" + d.getSeconds() : d.getSeconds();
                    var time = "[" + hours + ":" + minutes + ":" + seconds + "]";
                    showTooltip(item.pageX, item.pageY, time + ":" + y + "MW");
                }
            }
            else {
                $("#tooltip").remove();
                previousPoint = null;
            }
        });

    });

    function getData(label, dataTable, axisIndex) {
        var result = null;
        if ($("#h_" + label)) {
            result = new Object();
            result.id = label;
            result.axis = axisIndex;
            result.data = [];
            var i = 0;
            dataTable.find(".d_" + label).each(function () {
                var date = new Date();
                date.setHours(i, 0, 0);
                result.data.push([date, $(this).html()]);
                i++;
            });
        }
        return result;
    }

    function showTooltip(x, y, contents) {
        $('<div id="tooltip">' + contents + '</div>').css({
            position: 'absolute',
            display: 'none',
            top: y + 5,
            left: x + 5,
            border: '1px solid #fdd',
            padding: '2px',
            'background-color': '#dfeffc',
            opacity: 0.80
        }).appendTo("body").fadeIn(200);
    }



</script>