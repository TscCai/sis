#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.18034
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Ncepu.GraduationProject.Sis.Persistence
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Ncepu.Gp.Sis")]
	public partial class DbModelDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region 可扩展性方法定义
    partial void OnCreated();
    partial void InsertSIS_BoilerIndex(SIS_BoilerIndex instance);
    partial void UpdateSIS_BoilerIndex(SIS_BoilerIndex instance);
    partial void DeleteSIS_BoilerIndex(SIS_BoilerIndex instance);
    partial void InsertSIS_Unit(SIS_Unit instance);
    partial void UpdateSIS_Unit(SIS_Unit instance);
    partial void DeleteSIS_Unit(SIS_Unit instance);
    partial void InsertSIS_MotorIndex(SIS_MotorIndex instance);
    partial void UpdateSIS_MotorIndex(SIS_MotorIndex instance);
    partial void DeleteSIS_MotorIndex(SIS_MotorIndex instance);
    partial void InsertSIS_PlantSummary(SIS_PlantSummary instance);
    partial void UpdateSIS_PlantSummary(SIS_PlantSummary instance);
    partial void DeleteSIS_PlantSummary(SIS_PlantSummary instance);
    partial void InsertSIS_PowerGeneration_Daily(SIS_PowerGeneration_Daily instance);
    partial void UpdateSIS_PowerGeneration_Daily(SIS_PowerGeneration_Daily instance);
    partial void DeleteSIS_PowerGeneration_Daily(SIS_PowerGeneration_Daily instance);
    partial void InsertSIS_PowerGeneration_Hourly(SIS_PowerGeneration_Hourly instance);
    partial void UpdateSIS_PowerGeneration_Hourly(SIS_PowerGeneration_Hourly instance);
    partial void DeleteSIS_PowerGeneration_Hourly(SIS_PowerGeneration_Hourly instance);
    partial void InsertSIS_PowerGeneration_Monthly(SIS_PowerGeneration_Monthly instance);
    partial void UpdateSIS_PowerGeneration_Monthly(SIS_PowerGeneration_Monthly instance);
    partial void DeleteSIS_PowerGeneration_Monthly(SIS_PowerGeneration_Monthly instance);
    partial void InsertSIS_PowerGeneration_Yearly(SIS_PowerGeneration_Yearly instance);
    partial void UpdateSIS_PowerGeneration_Yearly(SIS_PowerGeneration_Yearly instance);
    partial void DeleteSIS_PowerGeneration_Yearly(SIS_PowerGeneration_Yearly instance);
    partial void InsertSIS_TotalPowerGeneration_Daily(SIS_TotalPowerGeneration_Daily instance);
    partial void UpdateSIS_TotalPowerGeneration_Daily(SIS_TotalPowerGeneration_Daily instance);
    partial void DeleteSIS_TotalPowerGeneration_Daily(SIS_TotalPowerGeneration_Daily instance);
    partial void InsertSIS_TotalPowerGeneration_Hourly(SIS_TotalPowerGeneration_Hourly instance);
    partial void UpdateSIS_TotalPowerGeneration_Hourly(SIS_TotalPowerGeneration_Hourly instance);
    partial void DeleteSIS_TotalPowerGeneration_Hourly(SIS_TotalPowerGeneration_Hourly instance);
    partial void InsertSIS_TotalPowerGeneration_Monthly(SIS_TotalPowerGeneration_Monthly instance);
    partial void UpdateSIS_TotalPowerGeneration_Monthly(SIS_TotalPowerGeneration_Monthly instance);
    partial void DeleteSIS_TotalPowerGeneration_Monthly(SIS_TotalPowerGeneration_Monthly instance);
    partial void InsertSIS_TotalPowerGeneration_Yearly(SIS_TotalPowerGeneration_Yearly instance);
    partial void UpdateSIS_TotalPowerGeneration_Yearly(SIS_TotalPowerGeneration_Yearly instance);
    partial void DeleteSIS_TotalPowerGeneration_Yearly(SIS_TotalPowerGeneration_Yearly instance);
    partial void InsertSIS_TurbineIndex(SIS_TurbineIndex instance);
    partial void UpdateSIS_TurbineIndex(SIS_TurbineIndex instance);
    partial void DeleteSIS_TurbineIndex(SIS_TurbineIndex instance);
    partial void InsertSIS_EnvrionmentalIndex(SIS_EnvrionmentalIndex instance);
    partial void UpdateSIS_EnvrionmentalIndex(SIS_EnvrionmentalIndex instance);
    partial void DeleteSIS_EnvrionmentalIndex(SIS_EnvrionmentalIndex instance);
    partial void InsertSIS_User(SIS_User instance);
    partial void UpdateSIS_User(SIS_User instance);
    partial void DeleteSIS_User(SIS_User instance);
    partial void InsertSIS_UserGroup(SIS_UserGroup instance);
    partial void UpdateSIS_UserGroup(SIS_UserGroup instance);
    partial void DeleteSIS_UserGroup(SIS_UserGroup instance);
    #endregion
		
		public DbModelDataContext() : 
				base(global::Ncepu.GraduationProject.Sis.Persistence.Properties.Settings.Default.Ncepu_Gp_SisConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DbModelDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DbModelDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DbModelDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DbModelDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<SIS_BoilerIndex> SIS_BoilerIndex
		{
			get
			{
				return this.GetTable<SIS_BoilerIndex>();
			}
		}
		
		public System.Data.Linq.Table<SIS_Unit> SIS_Unit
		{
			get
			{
				return this.GetTable<SIS_Unit>();
			}
		}
		
		public System.Data.Linq.Table<SIS_MotorIndex> SIS_MotorIndex
		{
			get
			{
				return this.GetTable<SIS_MotorIndex>();
			}
		}
		
		public System.Data.Linq.Table<SIS_PlantSummary> SIS_PlantSummary
		{
			get
			{
				return this.GetTable<SIS_PlantSummary>();
			}
		}
		
		public System.Data.Linq.Table<SIS_PowerGeneration_Daily> SIS_PowerGeneration_Daily
		{
			get
			{
				return this.GetTable<SIS_PowerGeneration_Daily>();
			}
		}
		
		public System.Data.Linq.Table<SIS_PowerGeneration_Hourly> SIS_PowerGeneration_Hourly
		{
			get
			{
				return this.GetTable<SIS_PowerGeneration_Hourly>();
			}
		}
		
		public System.Data.Linq.Table<SIS_PowerGeneration_Monthly> SIS_PowerGeneration_Monthly
		{
			get
			{
				return this.GetTable<SIS_PowerGeneration_Monthly>();
			}
		}
		
		public System.Data.Linq.Table<SIS_PowerGeneration_Yearly> SIS_PowerGeneration_Yearly
		{
			get
			{
				return this.GetTable<SIS_PowerGeneration_Yearly>();
			}
		}
		
		public System.Data.Linq.Table<SIS_TotalPowerGeneration_Daily> SIS_TotalPowerGeneration_Daily
		{
			get
			{
				return this.GetTable<SIS_TotalPowerGeneration_Daily>();
			}
		}
		
		public System.Data.Linq.Table<SIS_TotalPowerGeneration_Hourly> SIS_TotalPowerGeneration_Hourly
		{
			get
			{
				return this.GetTable<SIS_TotalPowerGeneration_Hourly>();
			}
		}
		
		public System.Data.Linq.Table<SIS_TotalPowerGeneration_Monthly> SIS_TotalPowerGeneration_Monthly
		{
			get
			{
				return this.GetTable<SIS_TotalPowerGeneration_Monthly>();
			}
		}
		
		public System.Data.Linq.Table<SIS_TotalPowerGeneration_Yearly> SIS_TotalPowerGeneration_Yearly
		{
			get
			{
				return this.GetTable<SIS_TotalPowerGeneration_Yearly>();
			}
		}
		
		public System.Data.Linq.Table<SIS_TurbineIndex> SIS_TurbineIndex
		{
			get
			{
				return this.GetTable<SIS_TurbineIndex>();
			}
		}
		
		public System.Data.Linq.Table<SIS_EnvrionmentalIndex> SIS_EnvrionmentalIndex
		{
			get
			{
				return this.GetTable<SIS_EnvrionmentalIndex>();
			}
		}
		
		public System.Data.Linq.Table<SIS_User> SIS_User
		{
			get
			{
				return this.GetTable<SIS_User>();
			}
		}
		
		public System.Data.Linq.Table<SIS_UserGroup> SIS_UserGroup
		{
			get
			{
				return this.GetTable<SIS_UserGroup>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SIS_BoilerIndex")]
	public partial class SIS_BoilerIndex : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _UnitId;
		
		private System.Nullable<decimal> _MSPB;
		
		private System.Nullable<decimal> _MSTB;
		
		private System.Nullable<decimal> _RSPB;
		
		private System.Nullable<decimal> _RSTB;
		
		private System.Nullable<decimal> _DWF;
		
		private System.Nullable<decimal> _FWP;
		
		private System.Nullable<decimal> _FWF;
		
		private System.Nullable<decimal> _SEOC;
		
		private System.Nullable<decimal> _SEOT;
		
		private System.Nullable<decimal> _ACB;
		
		private System.Nullable<decimal> _BFW;
		
		private System.DateTime _Timestamp;
		
		private EntityRef<SIS_Unit> _SIS_Unit;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUnitIdChanging(int value);
    partial void OnUnitIdChanged();
    partial void OnMSPBChanging(System.Nullable<decimal> value);
    partial void OnMSPBChanged();
    partial void OnMSTBChanging(System.Nullable<decimal> value);
    partial void OnMSTBChanged();
    partial void OnRSPBChanging(System.Nullable<decimal> value);
    partial void OnRSPBChanged();
    partial void OnRSTBChanging(System.Nullable<decimal> value);
    partial void OnRSTBChanged();
    partial void OnDWFChanging(System.Nullable<decimal> value);
    partial void OnDWFChanged();
    partial void OnFWPChanging(System.Nullable<decimal> value);
    partial void OnFWPChanged();
    partial void OnFWFChanging(System.Nullable<decimal> value);
    partial void OnFWFChanged();
    partial void OnSEOCChanging(System.Nullable<decimal> value);
    partial void OnSEOCChanged();
    partial void OnSEOTChanging(System.Nullable<decimal> value);
    partial void OnSEOTChanged();
    partial void OnACBChanging(System.Nullable<decimal> value);
    partial void OnACBChanged();
    partial void OnBFWChanging(System.Nullable<decimal> value);
    partial void OnBFWChanged();
    partial void OnTimestampChanging(System.DateTime value);
    partial void OnTimestampChanged();
    #endregion
		
		public SIS_BoilerIndex()
		{
			this._SIS_Unit = default(EntityRef<SIS_Unit>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitId", DbType="Int NOT NULL")]
		public int UnitId
		{
			get
			{
				return this._UnitId;
			}
			set
			{
				if ((this._UnitId != value))
				{
					if (this._SIS_Unit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUnitIdChanging(value);
					this.SendPropertyChanging();
					this._UnitId = value;
					this.SendPropertyChanged("UnitId");
					this.OnUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MSPB", DbType="Decimal(15,3)")]
		public System.Nullable<decimal> MSPB
		{
			get
			{
				return this._MSPB;
			}
			set
			{
				if ((this._MSPB != value))
				{
					this.OnMSPBChanging(value);
					this.SendPropertyChanging();
					this._MSPB = value;
					this.SendPropertyChanged("MSPB");
					this.OnMSPBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MSTB", DbType="Decimal(15,3)")]
		public System.Nullable<decimal> MSTB
		{
			get
			{
				return this._MSTB;
			}
			set
			{
				if ((this._MSTB != value))
				{
					this.OnMSTBChanging(value);
					this.SendPropertyChanging();
					this._MSTB = value;
					this.SendPropertyChanged("MSTB");
					this.OnMSTBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RSPB", DbType="Decimal(15,3)")]
		public System.Nullable<decimal> RSPB
		{
			get
			{
				return this._RSPB;
			}
			set
			{
				if ((this._RSPB != value))
				{
					this.OnRSPBChanging(value);
					this.SendPropertyChanging();
					this._RSPB = value;
					this.SendPropertyChanged("RSPB");
					this.OnRSPBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RSTB", DbType="Decimal(15,3)")]
		public System.Nullable<decimal> RSTB
		{
			get
			{
				return this._RSTB;
			}
			set
			{
				if ((this._RSTB != value))
				{
					this.OnRSTBChanging(value);
					this.SendPropertyChanging();
					this._RSTB = value;
					this.SendPropertyChanged("RSTB");
					this.OnRSTBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DWF", DbType="Decimal(15,3)")]
		public System.Nullable<decimal> DWF
		{
			get
			{
				return this._DWF;
			}
			set
			{
				if ((this._DWF != value))
				{
					this.OnDWFChanging(value);
					this.SendPropertyChanging();
					this._DWF = value;
					this.SendPropertyChanged("DWF");
					this.OnDWFChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FWP", DbType="Decimal(15,3)")]
		public System.Nullable<decimal> FWP
		{
			get
			{
				return this._FWP;
			}
			set
			{
				if ((this._FWP != value))
				{
					this.OnFWPChanging(value);
					this.SendPropertyChanging();
					this._FWP = value;
					this.SendPropertyChanged("FWP");
					this.OnFWPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FWF", DbType="Decimal(15,3)")]
		public System.Nullable<decimal> FWF
		{
			get
			{
				return this._FWF;
			}
			set
			{
				if ((this._FWF != value))
				{
					this.OnFWFChanging(value);
					this.SendPropertyChanging();
					this._FWF = value;
					this.SendPropertyChanged("FWF");
					this.OnFWFChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SEOC", DbType="Decimal(15,3)")]
		public System.Nullable<decimal> SEOC
		{
			get
			{
				return this._SEOC;
			}
			set
			{
				if ((this._SEOC != value))
				{
					this.OnSEOCChanging(value);
					this.SendPropertyChanging();
					this._SEOC = value;
					this.SendPropertyChanged("SEOC");
					this.OnSEOCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SEOT", DbType="Decimal(15,3)")]
		public System.Nullable<decimal> SEOT
		{
			get
			{
				return this._SEOT;
			}
			set
			{
				if ((this._SEOT != value))
				{
					this.OnSEOTChanging(value);
					this.SendPropertyChanging();
					this._SEOT = value;
					this.SendPropertyChanged("SEOT");
					this.OnSEOTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ACB", DbType="Decimal(15,3)")]
		public System.Nullable<decimal> ACB
		{
			get
			{
				return this._ACB;
			}
			set
			{
				if ((this._ACB != value))
				{
					this.OnACBChanging(value);
					this.SendPropertyChanging();
					this._ACB = value;
					this.SendPropertyChanged("ACB");
					this.OnACBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BFW", DbType="Decimal(15,3)")]
		public System.Nullable<decimal> BFW
		{
			get
			{
				return this._BFW;
			}
			set
			{
				if ((this._BFW != value))
				{
					this.OnBFWChanging(value);
					this.SendPropertyChanging();
					this._BFW = value;
					this.SendPropertyChanged("BFW");
					this.OnBFWChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Timestamp", DbType="DateTime NOT NULL")]
		public System.DateTime Timestamp
		{
			get
			{
				return this._Timestamp;
			}
			set
			{
				if ((this._Timestamp != value))
				{
					this.OnTimestampChanging(value);
					this.SendPropertyChanging();
					this._Timestamp = value;
					this.SendPropertyChanged("Timestamp");
					this.OnTimestampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SIS_Unit_SIS_BoilerIndex", Storage="_SIS_Unit", ThisKey="UnitId", OtherKey="UnitId", IsForeignKey=true)]
		public SIS_Unit SIS_Unit
		{
			get
			{
				return this._SIS_Unit.Entity;
			}
			set
			{
				SIS_Unit previousValue = this._SIS_Unit.Entity;
				if (((previousValue != value) 
							|| (this._SIS_Unit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SIS_Unit.Entity = null;
						previousValue.SIS_BoilerIndex.Remove(this);
					}
					this._SIS_Unit.Entity = value;
					if ((value != null))
					{
						value.SIS_BoilerIndex.Add(this);
						this._UnitId = value.UnitId;
					}
					else
					{
						this._UnitId = default(int);
					}
					this.SendPropertyChanged("SIS_Unit");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SIS_Unit")]
	public partial class SIS_Unit : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _UnitId;
		
		private string _Name;
		
		private decimal _InstalledCapacity;
		
		private string _Status;
		
		private EntitySet<SIS_BoilerIndex> _SIS_BoilerIndex;
		
		private EntitySet<SIS_MotorIndex> _SIS_MotorIndex;
		
		private EntitySet<SIS_PowerGeneration_Daily> _SIS_PowerGeneration_Daily;
		
		private EntitySet<SIS_PowerGeneration_Hourly> _SIS_PowerGeneration_Hourly;
		
		private EntitySet<SIS_PowerGeneration_Monthly> _SIS_PowerGeneration_Monthly;
		
		private EntitySet<SIS_PowerGeneration_Yearly> _SIS_PowerGeneration_Yearly;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUnitIdChanging(int value);
    partial void OnUnitIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnInstalledCapacityChanging(decimal value);
    partial void OnInstalledCapacityChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    #endregion
		
		public SIS_Unit()
		{
			this._SIS_BoilerIndex = new EntitySet<SIS_BoilerIndex>(new Action<SIS_BoilerIndex>(this.attach_SIS_BoilerIndex), new Action<SIS_BoilerIndex>(this.detach_SIS_BoilerIndex));
			this._SIS_MotorIndex = new EntitySet<SIS_MotorIndex>(new Action<SIS_MotorIndex>(this.attach_SIS_MotorIndex), new Action<SIS_MotorIndex>(this.detach_SIS_MotorIndex));
			this._SIS_PowerGeneration_Daily = new EntitySet<SIS_PowerGeneration_Daily>(new Action<SIS_PowerGeneration_Daily>(this.attach_SIS_PowerGeneration_Daily), new Action<SIS_PowerGeneration_Daily>(this.detach_SIS_PowerGeneration_Daily));
			this._SIS_PowerGeneration_Hourly = new EntitySet<SIS_PowerGeneration_Hourly>(new Action<SIS_PowerGeneration_Hourly>(this.attach_SIS_PowerGeneration_Hourly), new Action<SIS_PowerGeneration_Hourly>(this.detach_SIS_PowerGeneration_Hourly));
			this._SIS_PowerGeneration_Monthly = new EntitySet<SIS_PowerGeneration_Monthly>(new Action<SIS_PowerGeneration_Monthly>(this.attach_SIS_PowerGeneration_Monthly), new Action<SIS_PowerGeneration_Monthly>(this.detach_SIS_PowerGeneration_Monthly));
			this._SIS_PowerGeneration_Yearly = new EntitySet<SIS_PowerGeneration_Yearly>(new Action<SIS_PowerGeneration_Yearly>(this.attach_SIS_PowerGeneration_Yearly), new Action<SIS_PowerGeneration_Yearly>(this.detach_SIS_PowerGeneration_Yearly));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitId", DbType="Int NOT NULL")]
		public int UnitId
		{
			get
			{
				return this._UnitId;
			}
			set
			{
				if ((this._UnitId != value))
				{
					this.OnUnitIdChanging(value);
					this.SendPropertyChanging();
					this._UnitId = value;
					this.SendPropertyChanged("UnitId");
					this.OnUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstalledCapacity", DbType="Decimal(10,3) NOT NULL")]
		public decimal InstalledCapacity
		{
			get
			{
				return this._InstalledCapacity;
			}
			set
			{
				if ((this._InstalledCapacity != value))
				{
					this.OnInstalledCapacityChanging(value);
					this.SendPropertyChanging();
					this._InstalledCapacity = value;
					this.SendPropertyChanged("InstalledCapacity");
					this.OnInstalledCapacityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="VarChar(20)")]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SIS_Unit_SIS_BoilerIndex", Storage="_SIS_BoilerIndex", ThisKey="UnitId", OtherKey="UnitId")]
		public EntitySet<SIS_BoilerIndex> SIS_BoilerIndex
		{
			get
			{
				return this._SIS_BoilerIndex;
			}
			set
			{
				this._SIS_BoilerIndex.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SIS_Unit_SIS_MotorIndex", Storage="_SIS_MotorIndex", ThisKey="UnitId", OtherKey="UnitId")]
		public EntitySet<SIS_MotorIndex> SIS_MotorIndex
		{
			get
			{
				return this._SIS_MotorIndex;
			}
			set
			{
				this._SIS_MotorIndex.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SIS_Unit_SIS_PowerGeneration_Daily", Storage="_SIS_PowerGeneration_Daily", ThisKey="UnitId", OtherKey="UnitId")]
		public EntitySet<SIS_PowerGeneration_Daily> SIS_PowerGeneration_Daily
		{
			get
			{
				return this._SIS_PowerGeneration_Daily;
			}
			set
			{
				this._SIS_PowerGeneration_Daily.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SIS_Unit_SIS_PowerGeneration_Hourly", Storage="_SIS_PowerGeneration_Hourly", ThisKey="UnitId", OtherKey="UnitId")]
		public EntitySet<SIS_PowerGeneration_Hourly> SIS_PowerGeneration_Hourly
		{
			get
			{
				return this._SIS_PowerGeneration_Hourly;
			}
			set
			{
				this._SIS_PowerGeneration_Hourly.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SIS_Unit_SIS_PowerGeneration_Monthly", Storage="_SIS_PowerGeneration_Monthly", ThisKey="UnitId", OtherKey="UnitId")]
		public EntitySet<SIS_PowerGeneration_Monthly> SIS_PowerGeneration_Monthly
		{
			get
			{
				return this._SIS_PowerGeneration_Monthly;
			}
			set
			{
				this._SIS_PowerGeneration_Monthly.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SIS_Unit_SIS_PowerGeneration_Yearly", Storage="_SIS_PowerGeneration_Yearly", ThisKey="UnitId", OtherKey="UnitId")]
		public EntitySet<SIS_PowerGeneration_Yearly> SIS_PowerGeneration_Yearly
		{
			get
			{
				return this._SIS_PowerGeneration_Yearly;
			}
			set
			{
				this._SIS_PowerGeneration_Yearly.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SIS_BoilerIndex(SIS_BoilerIndex entity)
		{
			this.SendPropertyChanging();
			entity.SIS_Unit = this;
		}
		
		private void detach_SIS_BoilerIndex(SIS_BoilerIndex entity)
		{
			this.SendPropertyChanging();
			entity.SIS_Unit = null;
		}
		
		private void attach_SIS_MotorIndex(SIS_MotorIndex entity)
		{
			this.SendPropertyChanging();
			entity.SIS_Unit = this;
		}
		
		private void detach_SIS_MotorIndex(SIS_MotorIndex entity)
		{
			this.SendPropertyChanging();
			entity.SIS_Unit = null;
		}
		
		private void attach_SIS_PowerGeneration_Daily(SIS_PowerGeneration_Daily entity)
		{
			this.SendPropertyChanging();
			entity.SIS_Unit = this;
		}
		
		private void detach_SIS_PowerGeneration_Daily(SIS_PowerGeneration_Daily entity)
		{
			this.SendPropertyChanging();
			entity.SIS_Unit = null;
		}
		
		private void attach_SIS_PowerGeneration_Hourly(SIS_PowerGeneration_Hourly entity)
		{
			this.SendPropertyChanging();
			entity.SIS_Unit = this;
		}
		
		private void detach_SIS_PowerGeneration_Hourly(SIS_PowerGeneration_Hourly entity)
		{
			this.SendPropertyChanging();
			entity.SIS_Unit = null;
		}
		
		private void attach_SIS_PowerGeneration_Monthly(SIS_PowerGeneration_Monthly entity)
		{
			this.SendPropertyChanging();
			entity.SIS_Unit = this;
		}
		
		private void detach_SIS_PowerGeneration_Monthly(SIS_PowerGeneration_Monthly entity)
		{
			this.SendPropertyChanging();
			entity.SIS_Unit = null;
		}
		
		private void attach_SIS_PowerGeneration_Yearly(SIS_PowerGeneration_Yearly entity)
		{
			this.SendPropertyChanging();
			entity.SIS_Unit = this;
		}
		
		private void detach_SIS_PowerGeneration_Yearly(SIS_PowerGeneration_Yearly entity)
		{
			this.SendPropertyChanging();
			entity.SIS_Unit = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SIS_MotorIndex")]
	public partial class SIS_MotorIndex : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _UnitId;
		
		private System.Nullable<decimal> _AP;
		
		private System.Nullable<decimal> _RP;
		
		private System.DateTime _Timestamp;
		
		private EntityRef<SIS_Unit> _SIS_Unit;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUnitIdChanging(int value);
    partial void OnUnitIdChanged();
    partial void OnAPChanging(System.Nullable<decimal> value);
    partial void OnAPChanged();
    partial void OnRPChanging(System.Nullable<decimal> value);
    partial void OnRPChanged();
    partial void OnTimestampChanging(System.DateTime value);
    partial void OnTimestampChanged();
    #endregion
		
		public SIS_MotorIndex()
		{
			this._SIS_Unit = default(EntityRef<SIS_Unit>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitId", DbType="Int NOT NULL")]
		public int UnitId
		{
			get
			{
				return this._UnitId;
			}
			set
			{
				if ((this._UnitId != value))
				{
					if (this._SIS_Unit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUnitIdChanging(value);
					this.SendPropertyChanging();
					this._UnitId = value;
					this.SendPropertyChanged("UnitId");
					this.OnUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AP", DbType="Decimal(15,3)")]
		public System.Nullable<decimal> AP
		{
			get
			{
				return this._AP;
			}
			set
			{
				if ((this._AP != value))
				{
					this.OnAPChanging(value);
					this.SendPropertyChanging();
					this._AP = value;
					this.SendPropertyChanged("AP");
					this.OnAPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RP", DbType="Decimal(15,3)")]
		public System.Nullable<decimal> RP
		{
			get
			{
				return this._RP;
			}
			set
			{
				if ((this._RP != value))
				{
					this.OnRPChanging(value);
					this.SendPropertyChanging();
					this._RP = value;
					this.SendPropertyChanged("RP");
					this.OnRPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Timestamp", DbType="DateTime NOT NULL")]
		public System.DateTime Timestamp
		{
			get
			{
				return this._Timestamp;
			}
			set
			{
				if ((this._Timestamp != value))
				{
					this.OnTimestampChanging(value);
					this.SendPropertyChanging();
					this._Timestamp = value;
					this.SendPropertyChanged("Timestamp");
					this.OnTimestampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SIS_Unit_SIS_MotorIndex", Storage="_SIS_Unit", ThisKey="UnitId", OtherKey="UnitId", IsForeignKey=true)]
		public SIS_Unit SIS_Unit
		{
			get
			{
				return this._SIS_Unit.Entity;
			}
			set
			{
				SIS_Unit previousValue = this._SIS_Unit.Entity;
				if (((previousValue != value) 
							|| (this._SIS_Unit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SIS_Unit.Entity = null;
						previousValue.SIS_MotorIndex.Remove(this);
					}
					this._SIS_Unit.Entity = value;
					if ((value != null))
					{
						value.SIS_MotorIndex.Add(this);
						this._UnitId = value.UnitId;
					}
					else
					{
						this._UnitId = default(int);
					}
					this.SendPropertyChanged("SIS_Unit");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SIS_PlantSummary")]
	public partial class SIS_PlantSummary : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _InstalledUnit;
		
		private decimal _InstalledCapacity;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnInstalledUnitChanging(int value);
    partial void OnInstalledUnitChanged();
    partial void OnInstalledCapacityChanging(decimal value);
    partial void OnInstalledCapacityChanged();
    #endregion
		
		public SIS_PlantSummary()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstalledUnit", DbType="Int NOT NULL")]
		public int InstalledUnit
		{
			get
			{
				return this._InstalledUnit;
			}
			set
			{
				if ((this._InstalledUnit != value))
				{
					this.OnInstalledUnitChanging(value);
					this.SendPropertyChanging();
					this._InstalledUnit = value;
					this.SendPropertyChanged("InstalledUnit");
					this.OnInstalledUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstalledCapacity", DbType="Decimal(10,3) NOT NULL")]
		public decimal InstalledCapacity
		{
			get
			{
				return this._InstalledCapacity;
			}
			set
			{
				if ((this._InstalledCapacity != value))
				{
					this.OnInstalledCapacityChanging(value);
					this.SendPropertyChanging();
					this._InstalledCapacity = value;
					this.SendPropertyChanged("InstalledCapacity");
					this.OnInstalledCapacityChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SIS_PowerGeneration_Daily")]
	public partial class SIS_PowerGeneration_Daily : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _UnitId;
		
		private System.Nullable<decimal> _PowerGeneration;
		
		private System.DateTime _Timestamp;
		
		private EntityRef<SIS_Unit> _SIS_Unit;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUnitIdChanging(int value);
    partial void OnUnitIdChanged();
    partial void OnPowerGenerationChanging(System.Nullable<decimal> value);
    partial void OnPowerGenerationChanged();
    partial void OnTimestampChanging(System.DateTime value);
    partial void OnTimestampChanged();
    #endregion
		
		public SIS_PowerGeneration_Daily()
		{
			this._SIS_Unit = default(EntityRef<SIS_Unit>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitId", DbType="Int NOT NULL")]
		public int UnitId
		{
			get
			{
				return this._UnitId;
			}
			set
			{
				if ((this._UnitId != value))
				{
					if (this._SIS_Unit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUnitIdChanging(value);
					this.SendPropertyChanging();
					this._UnitId = value;
					this.SendPropertyChanged("UnitId");
					this.OnUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PowerGeneration", DbType="Decimal(15,3)")]
		public System.Nullable<decimal> PowerGeneration
		{
			get
			{
				return this._PowerGeneration;
			}
			set
			{
				if ((this._PowerGeneration != value))
				{
					this.OnPowerGenerationChanging(value);
					this.SendPropertyChanging();
					this._PowerGeneration = value;
					this.SendPropertyChanged("PowerGeneration");
					this.OnPowerGenerationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Timestamp", DbType="DateTime NOT NULL")]
		public System.DateTime Timestamp
		{
			get
			{
				return this._Timestamp;
			}
			set
			{
				if ((this._Timestamp != value))
				{
					this.OnTimestampChanging(value);
					this.SendPropertyChanging();
					this._Timestamp = value;
					this.SendPropertyChanged("Timestamp");
					this.OnTimestampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SIS_Unit_SIS_PowerGeneration_Daily", Storage="_SIS_Unit", ThisKey="UnitId", OtherKey="UnitId", IsForeignKey=true)]
		public SIS_Unit SIS_Unit
		{
			get
			{
				return this._SIS_Unit.Entity;
			}
			set
			{
				SIS_Unit previousValue = this._SIS_Unit.Entity;
				if (((previousValue != value) 
							|| (this._SIS_Unit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SIS_Unit.Entity = null;
						previousValue.SIS_PowerGeneration_Daily.Remove(this);
					}
					this._SIS_Unit.Entity = value;
					if ((value != null))
					{
						value.SIS_PowerGeneration_Daily.Add(this);
						this._UnitId = value.UnitId;
					}
					else
					{
						this._UnitId = default(int);
					}
					this.SendPropertyChanged("SIS_Unit");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SIS_PowerGeneration_Hourly")]
	public partial class SIS_PowerGeneration_Hourly : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _UnitId;
		
		private System.Nullable<decimal> _PowerGeneration;
		
		private System.DateTime _Timestamp;
		
		private EntityRef<SIS_Unit> _SIS_Unit;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUnitIdChanging(int value);
    partial void OnUnitIdChanged();
    partial void OnPowerGenerationChanging(System.Nullable<decimal> value);
    partial void OnPowerGenerationChanged();
    partial void OnTimestampChanging(System.DateTime value);
    partial void OnTimestampChanged();
    #endregion
		
		public SIS_PowerGeneration_Hourly()
		{
			this._SIS_Unit = default(EntityRef<SIS_Unit>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitId", DbType="Int NOT NULL")]
		public int UnitId
		{
			get
			{
				return this._UnitId;
			}
			set
			{
				if ((this._UnitId != value))
				{
					if (this._SIS_Unit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUnitIdChanging(value);
					this.SendPropertyChanging();
					this._UnitId = value;
					this.SendPropertyChanged("UnitId");
					this.OnUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PowerGeneration", DbType="Decimal(15,3)")]
		public System.Nullable<decimal> PowerGeneration
		{
			get
			{
				return this._PowerGeneration;
			}
			set
			{
				if ((this._PowerGeneration != value))
				{
					this.OnPowerGenerationChanging(value);
					this.SendPropertyChanging();
					this._PowerGeneration = value;
					this.SendPropertyChanged("PowerGeneration");
					this.OnPowerGenerationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Timestamp", DbType="DateTime NOT NULL")]
		public System.DateTime Timestamp
		{
			get
			{
				return this._Timestamp;
			}
			set
			{
				if ((this._Timestamp != value))
				{
					this.OnTimestampChanging(value);
					this.SendPropertyChanging();
					this._Timestamp = value;
					this.SendPropertyChanged("Timestamp");
					this.OnTimestampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SIS_Unit_SIS_PowerGeneration_Hourly", Storage="_SIS_Unit", ThisKey="UnitId", OtherKey="UnitId", IsForeignKey=true)]
		public SIS_Unit SIS_Unit
		{
			get
			{
				return this._SIS_Unit.Entity;
			}
			set
			{
				SIS_Unit previousValue = this._SIS_Unit.Entity;
				if (((previousValue != value) 
							|| (this._SIS_Unit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SIS_Unit.Entity = null;
						previousValue.SIS_PowerGeneration_Hourly.Remove(this);
					}
					this._SIS_Unit.Entity = value;
					if ((value != null))
					{
						value.SIS_PowerGeneration_Hourly.Add(this);
						this._UnitId = value.UnitId;
					}
					else
					{
						this._UnitId = default(int);
					}
					this.SendPropertyChanged("SIS_Unit");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SIS_PowerGeneration_Monthly")]
	public partial class SIS_PowerGeneration_Monthly : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _UnitId;
		
		private System.Nullable<decimal> _PowerGeneration;
		
		private System.DateTime _Timestamp;
		
		private EntityRef<SIS_Unit> _SIS_Unit;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUnitIdChanging(int value);
    partial void OnUnitIdChanged();
    partial void OnPowerGenerationChanging(System.Nullable<decimal> value);
    partial void OnPowerGenerationChanged();
    partial void OnTimestampChanging(System.DateTime value);
    partial void OnTimestampChanged();
    #endregion
		
		public SIS_PowerGeneration_Monthly()
		{
			this._SIS_Unit = default(EntityRef<SIS_Unit>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitId", DbType="Int NOT NULL")]
		public int UnitId
		{
			get
			{
				return this._UnitId;
			}
			set
			{
				if ((this._UnitId != value))
				{
					if (this._SIS_Unit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUnitIdChanging(value);
					this.SendPropertyChanging();
					this._UnitId = value;
					this.SendPropertyChanged("UnitId");
					this.OnUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PowerGeneration", DbType="Decimal(15,3)")]
		public System.Nullable<decimal> PowerGeneration
		{
			get
			{
				return this._PowerGeneration;
			}
			set
			{
				if ((this._PowerGeneration != value))
				{
					this.OnPowerGenerationChanging(value);
					this.SendPropertyChanging();
					this._PowerGeneration = value;
					this.SendPropertyChanged("PowerGeneration");
					this.OnPowerGenerationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Timestamp", DbType="DateTime NOT NULL")]
		public System.DateTime Timestamp
		{
			get
			{
				return this._Timestamp;
			}
			set
			{
				if ((this._Timestamp != value))
				{
					this.OnTimestampChanging(value);
					this.SendPropertyChanging();
					this._Timestamp = value;
					this.SendPropertyChanged("Timestamp");
					this.OnTimestampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SIS_Unit_SIS_PowerGeneration_Monthly", Storage="_SIS_Unit", ThisKey="UnitId", OtherKey="UnitId", IsForeignKey=true)]
		public SIS_Unit SIS_Unit
		{
			get
			{
				return this._SIS_Unit.Entity;
			}
			set
			{
				SIS_Unit previousValue = this._SIS_Unit.Entity;
				if (((previousValue != value) 
							|| (this._SIS_Unit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SIS_Unit.Entity = null;
						previousValue.SIS_PowerGeneration_Monthly.Remove(this);
					}
					this._SIS_Unit.Entity = value;
					if ((value != null))
					{
						value.SIS_PowerGeneration_Monthly.Add(this);
						this._UnitId = value.UnitId;
					}
					else
					{
						this._UnitId = default(int);
					}
					this.SendPropertyChanged("SIS_Unit");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SIS_PowerGeneration_Yearly")]
	public partial class SIS_PowerGeneration_Yearly : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _UnitId;
		
		private System.Nullable<decimal> _PowerGeneration;
		
		private System.DateTime _Timestamp;
		
		private EntityRef<SIS_Unit> _SIS_Unit;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUnitIdChanging(int value);
    partial void OnUnitIdChanged();
    partial void OnPowerGenerationChanging(System.Nullable<decimal> value);
    partial void OnPowerGenerationChanged();
    partial void OnTimestampChanging(System.DateTime value);
    partial void OnTimestampChanged();
    #endregion
		
		public SIS_PowerGeneration_Yearly()
		{
			this._SIS_Unit = default(EntityRef<SIS_Unit>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitId", DbType="Int NOT NULL")]
		public int UnitId
		{
			get
			{
				return this._UnitId;
			}
			set
			{
				if ((this._UnitId != value))
				{
					if (this._SIS_Unit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUnitIdChanging(value);
					this.SendPropertyChanging();
					this._UnitId = value;
					this.SendPropertyChanged("UnitId");
					this.OnUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PowerGeneration", DbType="Decimal(15,3)")]
		public System.Nullable<decimal> PowerGeneration
		{
			get
			{
				return this._PowerGeneration;
			}
			set
			{
				if ((this._PowerGeneration != value))
				{
					this.OnPowerGenerationChanging(value);
					this.SendPropertyChanging();
					this._PowerGeneration = value;
					this.SendPropertyChanged("PowerGeneration");
					this.OnPowerGenerationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Timestamp", DbType="DateTime NOT NULL")]
		public System.DateTime Timestamp
		{
			get
			{
				return this._Timestamp;
			}
			set
			{
				if ((this._Timestamp != value))
				{
					this.OnTimestampChanging(value);
					this.SendPropertyChanging();
					this._Timestamp = value;
					this.SendPropertyChanged("Timestamp");
					this.OnTimestampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SIS_Unit_SIS_PowerGeneration_Yearly", Storage="_SIS_Unit", ThisKey="UnitId", OtherKey="UnitId", IsForeignKey=true)]
		public SIS_Unit SIS_Unit
		{
			get
			{
				return this._SIS_Unit.Entity;
			}
			set
			{
				SIS_Unit previousValue = this._SIS_Unit.Entity;
				if (((previousValue != value) 
							|| (this._SIS_Unit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SIS_Unit.Entity = null;
						previousValue.SIS_PowerGeneration_Yearly.Remove(this);
					}
					this._SIS_Unit.Entity = value;
					if ((value != null))
					{
						value.SIS_PowerGeneration_Yearly.Add(this);
						this._UnitId = value.UnitId;
					}
					else
					{
						this._UnitId = default(int);
					}
					this.SendPropertyChanged("SIS_Unit");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SIS_TotalPowerGeneration_Daily")]
	public partial class SIS_TotalPowerGeneration_Daily : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<decimal> _PowerGenerate;
		
		private System.DateTime _Timestamp;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnPowerGenerateChanging(System.Nullable<decimal> value);
    partial void OnPowerGenerateChanged();
    partial void OnTimestampChanging(System.DateTime value);
    partial void OnTimestampChanged();
    #endregion
		
		public SIS_TotalPowerGeneration_Daily()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PowerGenerate", DbType="Decimal(15,3)")]
		public System.Nullable<decimal> PowerGenerate
		{
			get
			{
				return this._PowerGenerate;
			}
			set
			{
				if ((this._PowerGenerate != value))
				{
					this.OnPowerGenerateChanging(value);
					this.SendPropertyChanging();
					this._PowerGenerate = value;
					this.SendPropertyChanged("PowerGenerate");
					this.OnPowerGenerateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Timestamp", DbType="DateTime NOT NULL")]
		public System.DateTime Timestamp
		{
			get
			{
				return this._Timestamp;
			}
			set
			{
				if ((this._Timestamp != value))
				{
					this.OnTimestampChanging(value);
					this.SendPropertyChanging();
					this._Timestamp = value;
					this.SendPropertyChanged("Timestamp");
					this.OnTimestampChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SIS_TotalPowerGeneration_Hourly")]
	public partial class SIS_TotalPowerGeneration_Hourly : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<decimal> _PowerGenerate;
		
		private System.DateTime _Timestamp;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnPowerGenerateChanging(System.Nullable<decimal> value);
    partial void OnPowerGenerateChanged();
    partial void OnTimestampChanging(System.DateTime value);
    partial void OnTimestampChanged();
    #endregion
		
		public SIS_TotalPowerGeneration_Hourly()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PowerGenerate", DbType="Decimal(15,3)")]
		public System.Nullable<decimal> PowerGenerate
		{
			get
			{
				return this._PowerGenerate;
			}
			set
			{
				if ((this._PowerGenerate != value))
				{
					this.OnPowerGenerateChanging(value);
					this.SendPropertyChanging();
					this._PowerGenerate = value;
					this.SendPropertyChanged("PowerGenerate");
					this.OnPowerGenerateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Timestamp", DbType="DateTime NOT NULL")]
		public System.DateTime Timestamp
		{
			get
			{
				return this._Timestamp;
			}
			set
			{
				if ((this._Timestamp != value))
				{
					this.OnTimestampChanging(value);
					this.SendPropertyChanging();
					this._Timestamp = value;
					this.SendPropertyChanged("Timestamp");
					this.OnTimestampChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SIS_TotalPowerGeneration_Monthly")]
	public partial class SIS_TotalPowerGeneration_Monthly : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<decimal> _PowerGenerate;
		
		private System.DateTime _Timestamp;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnPowerGenerateChanging(System.Nullable<decimal> value);
    partial void OnPowerGenerateChanged();
    partial void OnTimestampChanging(System.DateTime value);
    partial void OnTimestampChanged();
    #endregion
		
		public SIS_TotalPowerGeneration_Monthly()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PowerGenerate", DbType="Decimal(15,3)")]
		public System.Nullable<decimal> PowerGenerate
		{
			get
			{
				return this._PowerGenerate;
			}
			set
			{
				if ((this._PowerGenerate != value))
				{
					this.OnPowerGenerateChanging(value);
					this.SendPropertyChanging();
					this._PowerGenerate = value;
					this.SendPropertyChanged("PowerGenerate");
					this.OnPowerGenerateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Timestamp", DbType="DateTime NOT NULL")]
		public System.DateTime Timestamp
		{
			get
			{
				return this._Timestamp;
			}
			set
			{
				if ((this._Timestamp != value))
				{
					this.OnTimestampChanging(value);
					this.SendPropertyChanging();
					this._Timestamp = value;
					this.SendPropertyChanged("Timestamp");
					this.OnTimestampChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SIS_TotalPowerGeneration_Yearly")]
	public partial class SIS_TotalPowerGeneration_Yearly : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<decimal> _PowerGenerate;
		
		private System.DateTime _Timestamp;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnPowerGenerateChanging(System.Nullable<decimal> value);
    partial void OnPowerGenerateChanged();
    partial void OnTimestampChanging(System.DateTime value);
    partial void OnTimestampChanged();
    #endregion
		
		public SIS_TotalPowerGeneration_Yearly()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PowerGenerate", DbType="Decimal(15,3)")]
		public System.Nullable<decimal> PowerGenerate
		{
			get
			{
				return this._PowerGenerate;
			}
			set
			{
				if ((this._PowerGenerate != value))
				{
					this.OnPowerGenerateChanging(value);
					this.SendPropertyChanging();
					this._PowerGenerate = value;
					this.SendPropertyChanged("PowerGenerate");
					this.OnPowerGenerateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Timestamp", DbType="DateTime NOT NULL")]
		public System.DateTime Timestamp
		{
			get
			{
				return this._Timestamp;
			}
			set
			{
				if ((this._Timestamp != value))
				{
					this.OnTimestampChanging(value);
					this.SendPropertyChanging();
					this._Timestamp = value;
					this.SendPropertyChanged("Timestamp");
					this.OnTimestampChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SIS_TurbineIndex")]
	public partial class SIS_TurbineIndex : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _UnitId;
		
		private System.Nullable<decimal> _MSPT;
		
		private System.Nullable<decimal> _MSTT;
		
		private System.Nullable<decimal> _MSFT;
		
		private System.Nullable<decimal> _RSPT;
		
		private System.Nullable<decimal> _RSTT;
		
		private System.Nullable<decimal> _CEV;
		
		private System.DateTime _Timestamp;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUnitIdChanging(int value);
    partial void OnUnitIdChanged();
    partial void OnMSPTChanging(System.Nullable<decimal> value);
    partial void OnMSPTChanged();
    partial void OnMSTTChanging(System.Nullable<decimal> value);
    partial void OnMSTTChanged();
    partial void OnMSFTChanging(System.Nullable<decimal> value);
    partial void OnMSFTChanged();
    partial void OnRSPTChanging(System.Nullable<decimal> value);
    partial void OnRSPTChanged();
    partial void OnRSTTChanging(System.Nullable<decimal> value);
    partial void OnRSTTChanged();
    partial void OnCEVChanging(System.Nullable<decimal> value);
    partial void OnCEVChanged();
    partial void OnTimestampChanging(System.DateTime value);
    partial void OnTimestampChanged();
    #endregion
		
		public SIS_TurbineIndex()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitId", DbType="Int NOT NULL")]
		public int UnitId
		{
			get
			{
				return this._UnitId;
			}
			set
			{
				if ((this._UnitId != value))
				{
					this.OnUnitIdChanging(value);
					this.SendPropertyChanging();
					this._UnitId = value;
					this.SendPropertyChanged("UnitId");
					this.OnUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MSPT", DbType="Decimal(15,3)")]
		public System.Nullable<decimal> MSPT
		{
			get
			{
				return this._MSPT;
			}
			set
			{
				if ((this._MSPT != value))
				{
					this.OnMSPTChanging(value);
					this.SendPropertyChanging();
					this._MSPT = value;
					this.SendPropertyChanged("MSPT");
					this.OnMSPTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MSTT", DbType="Decimal(15,3)")]
		public System.Nullable<decimal> MSTT
		{
			get
			{
				return this._MSTT;
			}
			set
			{
				if ((this._MSTT != value))
				{
					this.OnMSTTChanging(value);
					this.SendPropertyChanging();
					this._MSTT = value;
					this.SendPropertyChanged("MSTT");
					this.OnMSTTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MSFT", DbType="Decimal(15,3)")]
		public System.Nullable<decimal> MSFT
		{
			get
			{
				return this._MSFT;
			}
			set
			{
				if ((this._MSFT != value))
				{
					this.OnMSFTChanging(value);
					this.SendPropertyChanging();
					this._MSFT = value;
					this.SendPropertyChanged("MSFT");
					this.OnMSFTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RSPT", DbType="Decimal(15,3)")]
		public System.Nullable<decimal> RSPT
		{
			get
			{
				return this._RSPT;
			}
			set
			{
				if ((this._RSPT != value))
				{
					this.OnRSPTChanging(value);
					this.SendPropertyChanging();
					this._RSPT = value;
					this.SendPropertyChanged("RSPT");
					this.OnRSPTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RSTT", DbType="Decimal(15,3)")]
		public System.Nullable<decimal> RSTT
		{
			get
			{
				return this._RSTT;
			}
			set
			{
				if ((this._RSTT != value))
				{
					this.OnRSTTChanging(value);
					this.SendPropertyChanging();
					this._RSTT = value;
					this.SendPropertyChanged("RSTT");
					this.OnRSTTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CEV", DbType="Decimal(15,3)")]
		public System.Nullable<decimal> CEV
		{
			get
			{
				return this._CEV;
			}
			set
			{
				if ((this._CEV != value))
				{
					this.OnCEVChanging(value);
					this.SendPropertyChanging();
					this._CEV = value;
					this.SendPropertyChanged("CEV");
					this.OnCEVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Timestamp", DbType="DateTime NOT NULL")]
		public System.DateTime Timestamp
		{
			get
			{
				return this._Timestamp;
			}
			set
			{
				if ((this._Timestamp != value))
				{
					this.OnTimestampChanging(value);
					this.SendPropertyChanging();
					this._Timestamp = value;
					this.SendPropertyChanged("Timestamp");
					this.OnTimestampChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SIS_EnvrionmentalIndex")]
	public partial class SIS_EnvrionmentalIndex : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<decimal> _SO2;
		
		private System.Nullable<decimal> _NOX;
		
		private System.Nullable<decimal> _DSPC;
		
		private System.Nullable<decimal> _DNPC;
		
		private System.DateTime _Timestamp;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnSO2Changing(System.Nullable<decimal> value);
    partial void OnSO2Changed();
    partial void OnNOXChanging(System.Nullable<decimal> value);
    partial void OnNOXChanged();
    partial void OnDSPCChanging(System.Nullable<decimal> value);
    partial void OnDSPCChanged();
    partial void OnDNPCChanging(System.Nullable<decimal> value);
    partial void OnDNPCChanged();
    partial void OnTimestampChanging(System.DateTime value);
    partial void OnTimestampChanged();
    #endregion
		
		public SIS_EnvrionmentalIndex()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SO2", DbType="Decimal(15,3)")]
		public System.Nullable<decimal> SO2
		{
			get
			{
				return this._SO2;
			}
			set
			{
				if ((this._SO2 != value))
				{
					this.OnSO2Changing(value);
					this.SendPropertyChanging();
					this._SO2 = value;
					this.SendPropertyChanged("SO2");
					this.OnSO2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOX", DbType="Decimal(15,3)")]
		public System.Nullable<decimal> NOX
		{
			get
			{
				return this._NOX;
			}
			set
			{
				if ((this._NOX != value))
				{
					this.OnNOXChanging(value);
					this.SendPropertyChanging();
					this._NOX = value;
					this.SendPropertyChanged("NOX");
					this.OnNOXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DSPC", DbType="Decimal(15,3)")]
		public System.Nullable<decimal> DSPC
		{
			get
			{
				return this._DSPC;
			}
			set
			{
				if ((this._DSPC != value))
				{
					this.OnDSPCChanging(value);
					this.SendPropertyChanging();
					this._DSPC = value;
					this.SendPropertyChanged("DSPC");
					this.OnDSPCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DNPC", DbType="Decimal(15,3)")]
		public System.Nullable<decimal> DNPC
		{
			get
			{
				return this._DNPC;
			}
			set
			{
				if ((this._DNPC != value))
				{
					this.OnDNPCChanging(value);
					this.SendPropertyChanging();
					this._DNPC = value;
					this.SendPropertyChanged("DNPC");
					this.OnDNPCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Timestamp", DbType="DateTime NOT NULL")]
		public System.DateTime Timestamp
		{
			get
			{
				return this._Timestamp;
			}
			set
			{
				if ((this._Timestamp != value))
				{
					this.OnTimestampChanging(value);
					this.SendPropertyChanging();
					this._Timestamp = value;
					this.SendPropertyChanged("Timestamp");
					this.OnTimestampChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SIS_User")]
	public partial class SIS_User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Username;
		
		private string _Salt;
		
		private string _Password;
		
		private int _GroupId;
		
		private string _Status;
		
		private EntityRef<SIS_UserGroup> _SIS_UserGroup;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnSaltChanging(string value);
    partial void OnSaltChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnGroupIdChanging(int value);
    partial void OnGroupIdChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    #endregion
		
		public SIS_User()
		{
			this._SIS_UserGroup = default(EntityRef<SIS_UserGroup>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Salt", DbType="Char(16) NOT NULL", CanBeNull=false)]
		public string Salt
		{
			get
			{
				return this._Salt;
			}
			set
			{
				if ((this._Salt != value))
				{
					this.OnSaltChanging(value);
					this.SendPropertyChanging();
					this._Salt = value;
					this.SendPropertyChanged("Salt");
					this.OnSaltChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="Char(64) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupId", DbType="Int NOT NULL")]
		public int GroupId
		{
			get
			{
				return this._GroupId;
			}
			set
			{
				if ((this._GroupId != value))
				{
					if (this._SIS_UserGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGroupIdChanging(value);
					this.SendPropertyChanging();
					this._GroupId = value;
					this.SendPropertyChanged("GroupId");
					this.OnGroupIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SIS_UserGroup_SIS_User", Storage="_SIS_UserGroup", ThisKey="GroupId", OtherKey="Id", IsForeignKey=true)]
		public SIS_UserGroup SIS_UserGroup
		{
			get
			{
				return this._SIS_UserGroup.Entity;
			}
			set
			{
				SIS_UserGroup previousValue = this._SIS_UserGroup.Entity;
				if (((previousValue != value) 
							|| (this._SIS_UserGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SIS_UserGroup.Entity = null;
						previousValue.SIS_User.Remove(this);
					}
					this._SIS_UserGroup.Entity = value;
					if ((value != null))
					{
						value.SIS_User.Add(this);
						this._GroupId = value.Id;
					}
					else
					{
						this._GroupId = default(int);
					}
					this.SendPropertyChanged("SIS_UserGroup");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SIS_UserGroup")]
	public partial class SIS_UserGroup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _GroupName;
		
		private EntitySet<SIS_User> _SIS_User;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnGroupNameChanging(string value);
    partial void OnGroupNameChanged();
    #endregion
		
		public SIS_UserGroup()
		{
			this._SIS_User = new EntitySet<SIS_User>(new Action<SIS_User>(this.attach_SIS_User), new Action<SIS_User>(this.detach_SIS_User));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string GroupName
		{
			get
			{
				return this._GroupName;
			}
			set
			{
				if ((this._GroupName != value))
				{
					this.OnGroupNameChanging(value);
					this.SendPropertyChanging();
					this._GroupName = value;
					this.SendPropertyChanged("GroupName");
					this.OnGroupNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SIS_UserGroup_SIS_User", Storage="_SIS_User", ThisKey="Id", OtherKey="GroupId")]
		public EntitySet<SIS_User> SIS_User
		{
			get
			{
				return this._SIS_User;
			}
			set
			{
				this._SIS_User.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SIS_User(SIS_User entity)
		{
			this.SendPropertyChanging();
			entity.SIS_UserGroup = this;
		}
		
		private void detach_SIS_User(SIS_User entity)
		{
			this.SendPropertyChanging();
			entity.SIS_UserGroup = null;
		}
	}
}
#pragma warning restore 1591
